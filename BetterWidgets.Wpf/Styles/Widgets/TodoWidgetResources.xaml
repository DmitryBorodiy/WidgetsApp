<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:BetterWidgets.Behaviours.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:e="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
    xmlns:h="clr-namespace:BetterWidgets.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:r="clr-namespace:BetterWidgets.Resources"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:vmc="clr-namespace:BetterWidgets.ViewModel.Components"
    mc:Ignorable="d">

    <Style
        x:Key="DefaultTodoTaskCheckBoxStyle"
        BasedOn="{StaticResource {x:Type CheckBox}}"
        TargetType="CheckBox">
        <Setter Property="Border.CornerRadius" Value="50" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="TodoTaskItemTemplate" DataType="vmc:TodoTaskViewModel">
        <Grid
            Height="Auto"
            Margin="-3,-5"
            HorizontalAlignment="Stretch"
            ToolTipService.ToolTip="{Binding Title, Mode=OneWay}">
            <Grid.Resources>
                <ResourceDictionary>
                    <c:BoolToTextWrappingConverter x:Key="BoolToTextWrap" />
                </ResourceDictionary>
            </Grid.Resources>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="42" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <ui:Card
                Grid.ColumnSpan="3"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch" />

            <CheckBox
                Grid.Column="0"
                Margin="2,0,0,0"
                Padding="0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                IsChecked="{Binding IsCompleted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Style="{StaticResource DefaultTodoTaskCheckBoxStyle}" />

            <StackPanel
                Grid.Column="1"
                Margin="1,9,6,9"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center">
                <ui:TextBlock
                    HorizontalAlignment="Stretch"
                    Text="{Binding Title, Mode=OneWay}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="{Binding EnableTextWrap, Mode=OneWay, Converter={StaticResource BoolToTextWrap}}">
                    <ui:TextBlock.Style>
                        <Style TargetType="ui:TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsCompleted, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="TextDecorations" Value="Strikethrough" />
                                    <Setter Property="Opacity" Value="0.6" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ui:TextBlock.Style>
                </ui:TextBlock>
                <ui:TextBlock
                    FontSize="13"
                    Opacity="0.8"
                    Text="{Binding Subtitle, Mode=OneWay}"
                    TextTrimming="CharacterEllipsis"
                    Visibility="{Binding SubtitleVisibility, Mode=OneWay}">
                    <ui:TextBlock.Style>
                        <Style TargetType="ui:TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsCompleted, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="TextDecorations" Value="Strikethrough" />
                                    <Setter Property="Opacity" Value="0.5" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ui:TextBlock.Style>
                </ui:TextBlock>
            </StackPanel>

            <ui:Button
                Grid.Column="2"
                Margin="0,0,8,0"
                Padding="2"
                VerticalAlignment="Center"
                Command="{Binding SwitchImportanceCommand}"
                Opacity="0.8"
                Style="{StaticResource FlatButton}"
                Visibility="{Binding ImportanceCommandVisibility, Mode=OneWay}">
                <ui:Button.Icon>
                    <ui:SymbolIcon
                        Filled="{Binding IsImportant, Mode=OneWay}"
                        FontSize="22"
                        Symbol="Star20">
                        <ui:SymbolIcon.Style>
                            <Style TargetType="ui:SymbolIcon">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsImportant}" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource AccentButtonBackground}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ui:SymbolIcon.Style>
                    </ui:SymbolIcon>
                </ui:Button.Icon>
            </ui:Button>
        </Grid>
    </DataTemplate>

    <ItemsPanelTemplate x:Key="TodoTasksItemsPanel">
        <StackPanel
            HorizontalAlignment="Stretch"
            h:MarginSetter.LastItemMargin="0"
            h:MarginSetter.Margin="0, 0, 0, 5" />
    </ItemsPanelTemplate>

    <Style
        x:Key="DefaultTaskCheckBoxStyle"
        BasedOn="{StaticResource {x:Type CheckBox}}"
        TargetType="CheckBox">
        <Setter Property="Border.CornerRadius" Value="30" />
    </Style>

    <Style
        x:Key="DefaultTaskTextBoxStyle"
        BasedOn="{StaticResource {x:Type ui:TextBox}}"
        TargetType="ui:TextBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="0,8" />
        <Setter Property="PlaceholderText" Value="{x:Static r:Resources.EnterTaskName}" />

        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="DefaultTaskNoteTextBoxStyle"
        BasedOn="{StaticResource {x:Type ui:TextBox}}"
        TargetType="ui:TextBox">
        <Setter Property="MinHeight" Value="100" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="PlaceholderText" Value="{x:Static r:Resources.TaskDesciptionPlaceholder}" />
        <Setter Property="Padding" Value="0,8" />

        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RootScrollViewer" TargetType="ScrollViewer">
        <Setter Property="MinWidth" Value="280" />
        <Setter Property="MinHeight" Value="230" />
        <Setter Property="MaxWidth" Value="350" />
        <Setter Property="MaxHeight" Value="400" />
        <Setter Property="Margin" Value="0,0,-6,0" />
        <Setter Property="Padding" Value="0,0,6,0" />
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
                <Setter Property="Padding" Value="0,0,-8,0" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>