<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:BetterWidgets.Controls"
    xmlns:r="clr-namespace:BetterWidgets.Resources"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Styles/Controls/WidgetTitleBar.xaml" />
        <ResourceDictionary Source="/Styles/Controls/AnalogClock.xaml" />
        <ResourceDictionary Source="/Styles/Controls/DayPicker.xaml" />
        <ResourceDictionary Source="/Styles/Controls/CalendarStyles.xaml" />
        <ResourceDictionary Source="/Styles/Controls/ErrorMessage.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="SystemAccentColorBrush" Color="{DynamicResource SystemAccentColor}" />

    <Style
        x:Key="FlatButton"
        BasedOn="{StaticResource {x:Type ui:Button}}"
        TargetType="ui:Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="0" />

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ui:Button">
                            <Border
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Margin="{TemplateBinding Margin}"
                                Padding="{TemplateBinding Padding}"
                                IsHitTestVisible="False"
                                Opacity="0.3">
                                <ContentPresenter Content="{TemplateBinding Icon}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="DefaultSearchBox"
        BasedOn="{StaticResource {x:Type ui:TextBox}}"
        TargetType="ui:TextBox">
        <Setter Property="Border.CornerRadius" Value="17" />
        <Setter Property="Icon">
            <Setter.Value>
                <ui:SymbolIcon Symbol="Search20" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultPageTitle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="25" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>

    <Style
        x:Key="SelectionDisabledListItemContainerStyle"
        BasedOn="{StaticResource {x:Type ui:ListViewItem}}"
        TargetType="ListViewItem">
        <Setter Property="IsHitTestVisible" Value="False" />
    </Style>

    <Style x:Key="DefaultItemsCollectionStyle" TargetType="ListView">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Margin" Value="0,0,0,10" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <ContentPresenter ScrollViewer.CanContentScroll="False" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultPopupStyle" TargetType="Popup">
        <Setter Property="Margin" Value="0" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Placement" Value="Top" />
        <Setter Property="Popup.AllowsTransparency" Value="True" />
        <Setter Property="Popup.StaysOpen" Value="False" />
        <Setter Property="Popup.PopupAnimation" Value="Fade" />
        <Setter Property="Popup.VerticalOffset" Value="1" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
    </Style>

    <Style TargetType="c:ExpanderSettingView">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c:ExpanderSettingView">
                    <Expander
                        Margin="{TemplateBinding Margin}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        HorizontalContentAlignment="Stretch"
                        Content="{TemplateBinding Content}"
                        DataContext="{TemplateBinding DataContext}"
                        IsExpanded="{TemplateBinding IsExpanded}">
                        <Expander.Header>
                            <Grid Margin="5,0" HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Viewbox
                                    Grid.Column="0"
                                    Width="28"
                                    Height="28"
                                    VerticalAlignment="Center">
                                    <ContentControl
                                        Width="20"
                                        Height="20"
                                        Content="{TemplateBinding Icon}" />
                                </Viewbox>
                                <StackPanel
                                    Grid.Column="1"
                                    Margin="10,2,10,0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center">
                                    <ui:TextBlock
                                        HorizontalAlignment="Stretch"
                                        Text="{TemplateBinding Title}"
                                        TextWrapping="Wrap" />
                                    <ui:TextBlock
                                        Margin="0,2,0,0"
                                        HorizontalAlignment="Stretch"
                                        FontSize="12"
                                        Opacity="0.8"
                                        Text="{TemplateBinding Subtitle}"
                                        TextWrapping="Wrap" />
                                </StackPanel>
                                <ContentPresenter
                                    Grid.Column="2"
                                    Margin="5,0"
                                    Content="{TemplateBinding Header}" />
                            </Grid>
                        </Expander.Header>
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="c:CardSettingView">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c:CardSettingView">
                    <Border
                        Grid.RowSpan="2"
                        Grid.ColumnSpan="3"
                        Height="Auto"
                        Margin="{TemplateBinding Margin}"
                        Background="{DynamicResource ExpanderHeaderBackground}"
                        BorderBrush="{DynamicResource ExpanderHeaderBorderBrush}"
                        BorderThickness="{StaticResource ExpanderBorderThemeThickness}"
                        CornerRadius="{DynamicResource ControlCornerRadius}"
                        DataContext="{TemplateBinding DataContext}"
                        IsEnabled="{TemplateBinding IsEnabled}">
                        <Grid Height="Auto">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Border Grid.Row="0" Padding="15,10">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Viewbox
                                        Grid.Column="0"
                                        Width="28"
                                        Height="28">
                                        <ContentControl
                                            Width="20"
                                            Height="20"
                                            Content="{TemplateBinding Icon}" />
                                    </Viewbox>
                                    <StackPanel
                                        Grid.Column="1"
                                        Margin="10,2,10,0"
                                        VerticalAlignment="Center">
                                        <ui:TextBlock
                                            HorizontalAlignment="Stretch"
                                            Text="{TemplateBinding Title}"
                                            TextWrapping="Wrap" />
                                        <ui:TextBlock
                                            Margin="0,2,0,0"
                                            HorizontalAlignment="Stretch"
                                            FontSize="12"
                                            Opacity="0.8"
                                            Text="{TemplateBinding Subtitle}"
                                            TextWrapping="Wrap" />
                                    </StackPanel>
                                    <ContentPresenter Grid.Column="2" Content="{TemplateBinding Header}" />
                                </Grid>
                            </Border>

                            <ui:Button
                                Grid.Row="0"
                                Grid.ColumnSpan="3"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                Command="{TemplateBinding Command}"
                                Visibility="{TemplateBinding IsClickAreaVisible}" />

                            <Border Grid.Row="1" Padding="{TemplateBinding Padding}">
                                <ContentPresenter Content="{TemplateBinding Content}" />
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PermissionDialogIcon" TargetType="ui:SymbolIcon">
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="38" />
        <Setter Property="HorizontalAlignment" Value="Center" />

        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="2.4" ScaleY="2.4" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PermissionDialogTitle" TargetType="ui:TextBlock">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Margin" Value="0,20,0,0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Style x:Key="PermissionDialogSubtitle" TargetType="ui:TextBlock">
        <Setter Property="Margin" Value="0,10,0,20" />
        <Setter Property="Opacity" Value="0.8" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style
        x:Key="PermissionDialogStyle"
        BasedOn="{StaticResource {x:Type ui:ContentDialog}}"
        TargetType="ui:ContentDialog">
        <Setter Property="DefaultButton" Value="Primary" />
        <Setter Property="PrimaryButtonText" Value="{x:Static r:Resources.AllowLabel}" />
        <Setter Property="CloseButtonText" Value="{x:Static r:Resources.DenyLabel}" />
    </Style>

    <Style
        x:Key="PermissionMessageBoxStyle"
        BasedOn="{StaticResource {x:Type ui:MessageBox}}"
        TargetType="ui:MessageBox">
        <Setter Property="Title" Value="{x:Static r:Resources.RequestAccessDialogTitle}" />
        <Setter Property="PrimaryButtonAppearance" Value="Primary" />
        <Setter Property="PrimaryButtonText" Value="{x:Static r:Resources.AllowLabel}" />
        <Setter Property="CloseButtonText" Value="{x:Static r:Resources.DenyLabel}" />
    </Style>

    <Style x:Key="HorizontalExpanderDividerStyle" TargetType="Rectangle">
        <Setter Property="Height" Value="1.8" />
        <Setter Property="Fill" Value="{DynamicResource ExpanderHeaderBorderBrush}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <Style
        x:Key="PinWidgetButtonStyle"
        BasedOn="{StaticResource {x:Type ui:Button}}"
        TargetType="c:CustomToggleButton">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsToggled, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                <Setter Property="Content" Value="{x:Static r:Resources.UnpinFromDesktop}" />
                <Setter Property="Icon">
                    <Setter.Value>
                        <ui:SymbolIcon FontSize="20" Symbol="PinOff20" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsToggled, RelativeSource={RelativeSource Mode=Self}}" Value="False">
                <Setter Property="Content" Value="{x:Static r:Resources.PinOnDesktop}" />
                <Setter Property="Icon">
                    <Setter.Value>
                        <ui:SymbolIcon FontSize="20" Symbol="Pin20" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource DefaultComboBoxStyle}" TargetType="ComboBox">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="PickerComboBoxStyle"
        BasedOn="{StaticResource DefaultComboBoxStyle}"
        TargetType="ComboBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type ui:TextBox}}" TargetType="ui:TextBox">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type ui:NumberBox}}" TargetType="ui:NumberBox">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ValidationTextBoxStyle"
        BasedOn="{StaticResource {x:Type ui:TextBox}}"
        TargetType="ui:TextBox">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <ui:InfoBar
                        MaxWidth="220"
                        Margin="-48,38,80,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        IsClosable="False"
                        IsOpen="True"
                        Message="{Binding [0].ErrorContent}"
                        RenderTransformOrigin="0.5,0.5"
                        Severity="Error">
                        <ui:InfoBar.RenderTransform>
                            <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                        </ui:InfoBar.RenderTransform>
                    </ui:InfoBar>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="CompactListViewStyle"
        BasedOn="{StaticResource {x:Type ui:ListView}}"
        TargetType="ui:ListView">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>