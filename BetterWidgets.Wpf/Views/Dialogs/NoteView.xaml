<Page
    x:Class="BetterWidgets.Views.Dialogs.NoteView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:doc="clr-namespace:BetterWidgets.Helpers.XamlDocs"
    xmlns:h="clr-namespace:BetterWidgets.Helpers"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:BetterWidgets.Views.Dialogs"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:r="clr-namespace:BetterWidgets.Resources"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:vm="clr-namespace:BetterWidgets.ViewModel.Components"
    Title="{Binding SelectedNote.Title, Mode=OneWay}"
    d:Background="LightYellow"
    d:DesignHeight="320"
    d:DesignWidth="320"
    Background="{Binding ColorBrush, Mode=OneWay}"
    mc:Ignorable="d">
    <Page.DataContext>
        <vm:NoteViewModel />
    </Page.DataContext>
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Styles/Widgets/StickyNotesWidgetResources.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Color x:Key="ScrollBarForeground">#FF4D4D4D</Color>
            <SolidColorBrush x:Key="ScrollBarButtonArrowForeground" Color="{StaticResource ScrollBarForeground}" />
            <SolidColorBrush x:Key="ScrollBarThumbFill" Color="{StaticResource ScrollBarForeground}" />

            <Style
                x:Key="ReadOnlyRichTextBoxStyle"
                BasedOn="{StaticResource {x:Type ui:RichTextBox}}"
                TargetType="ui:RichTextBox">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="{StaticResource StickyNoteForegroundBrush}" />
                <Setter Property="Margin" Value="-6,0" />

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                    </Trigger>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ReadOnlyTextBoxStyle" TargetType="ui:TextBlock">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                <Setter Property="Foreground" Value="{StaticResource StickyNoteForegroundBrush}" />

                <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1" ScaleY="1" />
                    </Setter.Value>
                </Setter>
            </Style>

            <Style
                x:Key="DefaultToolBarButtonStyle"
                BasedOn="{StaticResource FlatButton}"
                TargetType="ui:Button">
                <Setter Property="Foreground" Value="{StaticResource StickyNoteForegroundBrush}" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Margin" Value="0,1,0,0" />
            </Style>

            <Style BasedOn="{StaticResource DefaultToolBarButtonStyle}" TargetType="ui:Button" />

            <Style x:Key="DefaultNoteTitleBox" TargetType="TextBox">
                <Setter Property="Padding" Value="2" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Foreground" Value="{StaticResource StickyNoteForegroundBrush}" />

                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1" ScaleY="1" />
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                    </Trigger>

                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="SignInMessageStyle" TargetType="StackPanel">
                <Setter Property="TextBlock.Foreground" Value="{StaticResource StickyNoteForegroundBrush}" />
            </Style>

            <DataTemplate x:Key="FontFamilyItemTemplate" DataType="FontFamily">
                <ui:TextBlock
                    Margin="9,3"
                    Foreground="{StaticResource StickyNoteForegroundBrush}"
                    Text="{Binding Source}" />
            </DataTemplate>
        </ResourceDictionary>
    </Page.Resources>

    <Grid Name="UINote" Margin="{Binding RootMargin, Mode=OneWay}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <ui:TextBlock
            Grid.Row="0"
            Grid.ColumnSpan="2"
            Margin="5,-2,0,0"
            d:Text="Make a title..."
            FontFamily="{Binding DefaultFontFamily, Mode=OneWay}"
            FontSize="16"
            Style="{StaticResource ReadOnlyTextBoxStyle}"
            Text="{Binding Title, Mode=OneWay}"
            Visibility="{Binding HasTitle, Mode=OneWay, Converter={StaticResource BoolToVisibility}}" />
        <TextBox
            Grid.Row="0"
            Grid.ColumnSpan="2"
            h:TextBoxHelper.Placeholder="{x:Static r:Resources.EnterNoteName}"
            FontFamily="{Binding DefaultFontFamily, Mode=OneWay}"
            FontSize="{Binding DefaultFontSize, Mode=OneWay}"
            Style="{StaticResource DefaultNoteTitleBox}"
            Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            Visibility="{Binding IsReadOnly, Mode=OneWay, Converter={StaticResource BoolToVisibilityInvert}}">

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="KeyDown">
                    <i:InvokeCommandAction Command="{Binding NoteTypingCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

        </TextBox>

        <ui:TextBlock
            Grid.Row="2"
            Grid.Column="1"
            Margin="0,0,6,-2"
            VerticalAlignment="Center"
            d:Text="6/6/2025"
            Foreground="{StaticResource StickyNoteForegroundBrush}"
            Opacity="0.5"
            Text="{Binding DateLabel, Mode=OneWay}"
            Visibility="{Binding IsReadOnly, Mode=OneWay, Converter={StaticResource BoolToVisibility}}" />

        <ui:RichTextBox
            x:Name="UIRichTextBox"
            Grid.Row="1"
            Grid.ColumnSpan="2"
            doc:RichTextBoxHelper.BindableDocument="{Binding Document, Mode=OneWay}"
            CaretBrush="{StaticResource StickyNoteForegroundBrush}"
            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
            Style="{StaticResource ReadOnlyRichTextBoxStyle}"
            Visibility="{Binding IsSignedIn, Mode=OneWay, Converter={StaticResource BoolToVisibility}}" />

        <ui:DynamicScrollViewer
            Grid.Row="2"
            Grid.Column="0"
            h:ScrollViewerHelper.EnableHorizontalScroll="True"
            IsEnabled="{Binding IsSignedIn, Mode=OneWay}">
            <ui:DynamicScrollViewer.Style>
                <Style TargetType="ui:DynamicScrollViewer">
                    <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
                    <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
                    <Setter Property="Foreground" Value="{StaticResource StickyNoteForegroundBrush}" />

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="HorizontalScrollBarVisibility" Value="Visible" />
                            <Setter Property="Margin" Value="0,0,0,-14" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ui:DynamicScrollViewer.Style>

            <Grid>
                <ToolBar
                    x:Name="UIViewToolBar"
                    Grid.Row="2"
                    Grid.Column="0"
                    Margin="0,0,0,-4"
                    HorizontalAlignment="Stretch"
                    d:IsHidden="True"
                    Foreground="{StaticResource StickyNoteForegroundBrush}"
                    ToolBarTray.IsLocked="True"
                    Visibility="{Binding IsEdit, Mode=OneWay, Converter={StaticResource BoolToVisibilityInvert}}">
                    <ui:Button
                        Margin="0,0,5,0"
                        Padding="6"
                        Command="{Binding ToggleEditCommand}"
                        ToolTipService.ToolTip="{x:Static r:Resources.Edit}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon Symbol="Edit20" />
                        </ui:Button.Icon>
                    </ui:Button>
                    <ui:Button
                        Margin="0,0,5,0"
                        Padding="6"
                        Command="{Binding CopyAllCommand}"
                        IsEnabled="{Binding IsNoteSelected, Mode=OneWay}"
                        ToolTipService.ToolTip="{x:Static r:Resources.Copy}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon Symbol="Copy20" />
                        </ui:Button.Icon>
                    </ui:Button>
                    <ui:Button
                        Margin="0,0,5,0"
                        Padding="6"
                        Command="{Binding PinNoteCommand}"
                        IsEnabled="{Binding IsNoteSelected, Mode=OneWay}"
                        ToolTipService.ToolTip="{x:Static r:Resources.PinLabel}"
                        Visibility="{Binding IsPinned, Mode=OneWay, Converter={StaticResource BoolToVisibilityInvert}}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon Symbol="Pin20" />
                        </ui:Button.Icon>
                    </ui:Button>
                    <ui:Button
                        Margin="0,0,5,0"
                        Padding="6"
                        Command="{Binding NoteUnpinnedCommand}"
                        CommandParameter="{Binding ClientId, Mode=OneWay}"
                        IsEnabled="{Binding IsNoteSelected, Mode=OneWay}"
                        ToolTipService.ToolTip="{x:Static r:Resources.Unpin}"
                        Visibility="{Binding IsPinned, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon Symbol="PinOff20" />
                        </ui:Button.Icon>
                    </ui:Button>
                    <Separator Height="15" />
                    <ui:Button
                        Margin="0,0,5,0"
                        Padding="6"
                        Command="{Binding RequestDeleteCommand}"
                        IsEnabled="{Binding IsNoteSelected, Mode=OneWay}"
                        ToolTipService.ToolTip="{x:Static r:Resources.DeleteLabel}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon Symbol="Delete20" />
                        </ui:Button.Icon>
                    </ui:Button>
                </ToolBar>

                <ToolBar
                    x:Name="UIEditToolBar"
                    Grid.Row="2"
                    Grid.ColumnSpan="2"
                    Margin="0,0,0,-4"
                    HorizontalAlignment="Stretch"
                    d:Visibility="Visible"
                    Foreground="{DynamicResource StickyNoteForegroundBrush}"
                    ToolBarTray.IsLocked="True"
                    Visibility="{Binding IsEdit, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">

                    <ui:Button
                        Margin="0,0,5,0"
                        Padding="6"
                        Command="{Binding SaveCommand}"
                        CommandParameter="{Binding ElementName=UIRichTextBox}"
                        ToolTipService.ToolTip="{x:Static r:Resources.Save}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon FontSize="16" Symbol="Save20" />
                        </ui:Button.Icon>
                    </ui:Button>
                    <Separator Height="15" />

                    <ui:Button
                        Margin="0,0,5,0"
                        Padding="6"
                        Command="ApplicationCommands.Undo"
                        CommandTarget="{Binding ElementName=UIRichTextBox}"
                        ToolTipService.ToolTip="{x:Static r:Resources.Undo}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon FontSize="16" Symbol="ArrowUndo20" />
                        </ui:Button.Icon>
                    </ui:Button>

                    <Separator Height="15" />

                    <ui:Button
                        Margin="0,0,5,0"
                        Padding="6"
                        Command="EditingCommands.ToggleBold"
                        CommandTarget="{Binding ElementName=UIRichTextBox}"
                        ToolTipService.ToolTip="{x:Static r:Resources.Bold}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon FontSize="16" Symbol="TextBold20" />
                        </ui:Button.Icon>
                    </ui:Button>
                    <ui:Button
                        Margin="0,0,5,0"
                        Padding="6"
                        Command="EditingCommands.ToggleItalic"
                        CommandTarget="{Binding ElementName=UIRichTextBox}"
                        ToolTipService.ToolTip="{x:Static r:Resources.Italic}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon FontSize="16" Symbol="TextItalic20" />
                        </ui:Button.Icon>
                    </ui:Button>
                    <ui:Button
                        Margin="0,0,5,0"
                        Padding="6"
                        Command="EditingCommands.ToggleUnderline"
                        CommandTarget="{Binding ElementName=UIRichTextBox}"
                        ToolTipService.ToolTip="{x:Static r:Resources.Underline}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon FontSize="16" Symbol="TextUnderline20" />
                        </ui:Button.Icon>
                    </ui:Button>

                    <Separator Height="15" />

                    <ui:Button
                        Margin="0,0,5,0"
                        Padding="6"
                        Command="EditingCommands.ToggleBullets"
                        CommandTarget="{Binding ElementName=UIRichTextBox}"
                        ToolTipService.ToolTip="{x:Static r:Resources.Bullets}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon FontSize="16" Symbol="TextBulletListAdd20" />
                        </ui:Button.Icon>
                    </ui:Button>
                    <ui:Button
                        Margin="0,0,5,0"
                        Padding="6"
                        Command="EditingCommands.ToggleNumbering"
                        CommandTarget="{Binding ElementName=UIRichTextBox}"
                        ToolTipService.ToolTip="{x:Static r:Resources.Numbering}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon FontSize="16" Symbol="TextNumberListLtr20" />
                        </ui:Button.Icon>
                    </ui:Button>

                    <Separator Height="15" />

                    <ui:Button
                        Margin="0,0,5,0"
                        Padding="6"
                        Command="{Binding ShowFontPickerCommand}"
                        ToolTipService.ToolTip="{x:Static r:Resources.SelectFont}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon FontSize="16" Symbol="TextFont20" />
                        </ui:Button.Icon>
                    </ui:Button>
                    <ui:Button
                        Margin="0,0,5,0"
                        Padding="6"
                        Command="EditingCommands.IncreaseFontSize"
                        CommandTarget="{Binding ElementName=UIRichTextBox}"
                        ToolTipService.ToolTip="{x:Static r:Resources.IncreaseFontSize}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon FontSize="16" Symbol="FontIncrease20" />
                        </ui:Button.Icon>
                    </ui:Button>
                    <ui:Button
                        Margin="0,0,5,0"
                        Padding="6"
                        Command="EditingCommands.DecreaseFontSize"
                        CommandTarget="{Binding ElementName=UIRichTextBox}"
                        ToolTipService.ToolTip="{x:Static r:Resources.DecreaseFontSize}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon FontSize="16" Symbol="FontDecrease20" />
                        </ui:Button.Icon>
                    </ui:Button>

                    <Separator Height="15" />

                    <ui:Button
                        Padding="6"
                        Command="{Binding ShowPickColorCommand}"
                        ToolTipService.ToolTip="{x:Static r:Resources.PickColor}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon FontSize="16" Symbol="Color20" />
                        </ui:Button.Icon>
                    </ui:Button>

                    <ui:Flyout
                        x:Name="UIColorPicker"
                        IsOpen="{Binding IsColorPickerOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Placement="Center">
                        <ui:ListView
                            MaxWidth="250"
                            Margin="-6,-3"
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                            SelectedItem="{Binding PickedColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <ui:ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ui:ListView.ItemsPanel>
                            <ui:ListView.ItemTemplate>
                                <DataTemplate DataType="SolidColorBrush">
                                    <Ellipse
                                        Width="25"
                                        Height="25"
                                        Margin="6"
                                        Fill="{Binding Color, Mode=OneWay, Converter={StaticResource ColorToBrush}}" />
                                </DataTemplate>
                            </ui:ListView.ItemTemplate>
                            <ui:ListView.Items>
                                <SolidColorBrush Color="LightYellow" />
                                <SolidColorBrush Color="LightGreen" />
                                <SolidColorBrush Color="LightBlue" />
                                <SolidColorBrush Color="LightCyan" />
                                <SolidColorBrush Color="LightPink" />
                                <SolidColorBrush Color="LightCoral" />
                                <SolidColorBrush Color="LightSkyBlue" />
                                <SolidColorBrush Color="LightGray" />
                                <SolidColorBrush Color="LightSalmon" />
                                <SolidColorBrush Color="LightGoldenrodYellow" />
                                <SolidColorBrush Color="LightSeaGreen" />
                            </ui:ListView.Items>
                        </ui:ListView>
                    </ui:Flyout>


                </ToolBar>
            </Grid>
        </ui:DynamicScrollViewer>

        <Grid
            x:Name="UIFontPicker"
            Grid.Row="0"
            Grid.RowSpan="2"
            Grid.ColumnSpan="2"
            Background="{Binding ColorBrush, Mode=OneWay}"
            Visibility="{Binding IsFontPickerOpen, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
            <ui:ListView
                ItemTemplate="{StaticResource FontFamilyItemTemplate}"
                ItemsSource="{Binding Source={x:Static Fonts.SystemFontFamilies}}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                SelectedItem="{Binding SelectedFont, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding PickFontCommand}" CommandParameter="{Binding ElementName=UIRichTextBox}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>

            </ui:ListView>
        </Grid>

        <StackPanel
            x:Name="UISignInMessage"
            Grid.RowSpan="2"
            Grid.ColumnSpan="2"
            MaxWidth="250"
            Margin="0,16,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            h:MarginSetter.LastItemMargin="0"
            h:MarginSetter.Margin="0, 0, 0, 10"
            Style="{StaticResource SignInMessageStyle}"
            Visibility="{Binding IsSignedIn, Mode=OneWay, Converter={StaticResource BoolToVisibilityInvert}}">

            <ui:TextBlock
                FontWeight="SemiBold"
                Text="{x:Static r:Resources.SignInLabel}"
                TextAlignment="Center" />
            <ui:TextBlock
                Opacity="0.8"
                Text="{x:Static r:Resources.SignInMessage}"
                TextAlignment="Center"
                TextWrapping="Wrap" />
            <Button
                HorizontalAlignment="Center"
                Command="{Binding SignInCommand}"
                Content="{x:Static r:Resources.SignInLabel}"
                Foreground="{StaticResource StickyNoteForegroundBrush}" />
        </StackPanel>
    </Grid>
</Page>
