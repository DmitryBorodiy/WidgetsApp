<Page
    x:Class="BetterWidgets.Views.Dialogs.EditTaskDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:BetterWidgets.Controls"
    xmlns:convert="clr-namespace:BetterWidgets.Behaviours.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:BetterWidgets.Views.Dialogs"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:r="clr-namespace:BetterWidgets.Resources"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:vm="clr-namespace:BetterWidgets.ViewModel.Dialogs"
    d:Background="{DynamicResource SystemAltHighBrushLight}"
    d:DesignHeight="300"
    d:DesignWidth="300"
    mc:Ignorable="d">
    <d:Page.DataContext>
        <vm:EditTodoTaskViewModel />
    </d:Page.DataContext>
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Styles/Widgets/TodoWidgetResources.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <convert:BoolToTextWrappingConverter x:Key="BoolToTextWrap" />
        </ResourceDictionary>
    </Page.Resources>

    <ScrollViewer x:Name="RootLayout" Style="{StaticResource RootScrollViewer}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <CheckBox
                    Grid.Column="0"
                    Margin="-2,1,0,1"
                    VerticalAlignment="Center"
                    IsChecked="{Binding TodoTask.IsCompleted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource DefaultTaskCheckBoxStyle}" />

                <ui:TextBox
                    Grid.Column="1"
                    Margin="0,0,0,2"
                    VerticalAlignment="Center"
                    d:Text="Task title"
                    AcceptsReturn="{Binding EnableTextWrap, Mode=OneWay}"
                    FontSize="18"
                    Style="{StaticResource DefaultTaskTextBoxStyle}"
                    Text="{Binding TaskTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    TextWrapping="{Binding EnableTextWrap, Mode=OneWay, Converter={StaticResource BoolToTextWrap}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="KeyDown">
                            <i:InvokeCommandAction Command="{Binding UITitleKeyDownCommand}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="LostFocus">
                            <i:InvokeCommandAction Command="{Binding TitleChangedCommand}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ui:TextBox>
            </Grid>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <ui:Button
                    Grid.Column="0"
                    Padding="8,2"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                    Command="{Binding RequestsReminderDateCommand}"
                    Style="{StaticResource FlatButton}">

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <ui:SymbolIcon
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            FontSize="20"
                            Symbol="Alert20" />

                        <StackPanel Grid.Column="1" Margin="8,0">
                            <ui:TextBlock Text="{x:Static r:Resources.ReminderLabel}" TextTrimming="CharacterEllipsis" />
                            <ui:TextBlock
                                FontSize="12"
                                Opacity="0.8"
                                Text="{Binding ReminderDateSubtitle, Mode=OneWay}"
                                TextTrimming="CharacterEllipsis" />
                        </StackPanel>
                    </Grid>
                </ui:Button>

                <ui:ToggleSwitch
                    Grid.Column="1"
                    Margin="6,0,12,0"
                    IsChecked="{Binding IsReminderOn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding IsReminderOnChangedCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                </ui:ToggleSwitch>
            </Grid>

            <Grid Grid.Row="2" Margin="0,0,0,6">
                <ui:Button
                    Grid.Column="0"
                    Padding="8,2"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                    Command="{Binding RequestsDueDateCommand}"
                    Style="{StaticResource FlatButton}">

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <ui:SymbolIcon
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            FontSize="20"
                            Symbol="CalendarClock20" />

                        <StackPanel Grid.Column="1" Margin="8,0">
                            <ui:TextBlock Text="{x:Static r:Resources.DueDateLabel}" TextTrimming="CharacterEllipsis" />
                            <ui:TextBlock
                                FontSize="12"
                                Opacity="0.8"
                                Text="{Binding DueDateSubtitle, Mode=OneWay}"
                                TextTrimming="CharacterEllipsis" />
                        </StackPanel>
                    </Grid>
                </ui:Button>
            </Grid>

            <Separator
                Grid.Row="3"
                Height="1"
                Margin="3,0,3,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top" />

            <Grid
                Grid.Row="3"
                Margin="10,5"
                Visibility="{Binding IsCheckListEnabled, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <ui:TextBlock
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    Text="{x:Static r:Resources.Checklist}"
                    TextTrimming="CharacterEllipsis" />

                <StackPanel
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">
                    <ui:Button
                        Padding="6"
                        VerticalAlignment="Center"
                        Command="{Binding RequestCreateSubTaskCommand}"
                        Style="{StaticResource FlatButton}"
                        ToolTipService.ToolTip="{x:Static r:Resources.AddTask}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon Symbol="Add20" />
                        </ui:Button.Icon>
                    </ui:Button>
                </StackPanel>
            </Grid>

            <ui:ListView
                Name="UISubTasks"
                Grid.Row="5"
                Margin="4,0,4,9"
                ItemTemplate="{StaticResource TodoTaskItemTemplate}"
                ItemsSource="{Binding SubTasksItems, Mode=OneWay}"
                SelectedItem="{Binding SelectedSubTask, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Visibility="{Binding IsCheckListEnabled, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                <ui:ListView.ContextMenu>
                    <ContextMenu>
                        <ui:MenuItem Command="{Binding ShowSubTaskDialogCommand}" Header="{x:Static r:Resources.Rename}">
                            <ui:MenuItem.Icon>
                                <ui:SymbolIcon Symbol="Rename20" />
                            </ui:MenuItem.Icon>
                        </ui:MenuItem>
                        <ui:MenuItem Command="{Binding DeleteSubTaskCommand}" Header="{x:Static r:Resources.DeleteLabel}">
                            <ui:MenuItem.Icon>
                                <ui:SymbolIcon Symbol="Delete20" />
                            </ui:MenuItem.Icon>
                        </ui:MenuItem>
                    </ContextMenu>
                </ui:ListView.ContextMenu>
            </ui:ListView>

            <Separator
                Grid.Row="6"
                Margin="3,0,3,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top" />

            <ui:TextBlock
                Grid.Row="6"
                Margin="9,9,9,8"
                HorizontalAlignment="Stretch"
                Text="{x:Static r:Resources.TaskDescription}"
                TextTrimming="CharacterEllipsis" />

            <ui:TextBox
                Grid.Row="7"
                Margin="9,0,9,13"
                Style="{StaticResource DefaultTaskNoteTextBoxStyle}"
                Text="{Binding TaskDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

            <Border
                Name="UISubTaskForm"
                Grid.RowSpan="9"
                Padding="13"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                d:Visibility="Collapsed"
                Background="{DynamicResource ApplicationBackgroundBrush}"
                BorderBrush="{DynamicResource CardBorderBrush}"
                BorderThickness="1"
                CornerRadius="10"
                Visibility="{Binding IsSubTaskDialogOpen, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <ui:TextBox
                        Grid.ColumnSpan="2"
                        MinWidth="220"
                        Margin="0,0,0,10"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Top"
                        AcceptsReturn="{Binding EnableTextWrap, Mode=OneWay}"
                        PlaceholderText="{x:Static r:Resources.EnterTaskName}"
                        Style="{StaticResource DefaultTaskTextBoxStyle}"
                        Text="{Binding SubTaskTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        TextWrapping="{Binding EnableTextWrap, Mode=OneWay, Converter={StaticResource BoolToTextWrap}}">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="KeyDown">
                                <i:InvokeCommandAction Command="{Binding SubTaskInputKeyDownCommand}" PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ui:TextBox>

                    <ui:Button
                        Grid.Row="1"
                        Grid.Column="0"
                        Margin="0,0,3,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Appearance="Primary"
                        Command="{Binding PatchSubTaskCommand}"
                        Content="OK"
                        IsEnabled="{Binding CanSaveSubTask, Mode=OneWay}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon Symbol="Checkmark20" />
                        </ui:Button.Icon>
                    </ui:Button>
                    <ui:Button
                        Grid.Row="1"
                        Grid.Column="1"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Command="{Binding CancelSubTaskDialogCommand}"
                        Content="{x:Static r:Resources.CancelLabel}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon Symbol="Dismiss20" />
                        </ui:Button.Icon>
                    </ui:Button>
                </Grid>
            </Border>

            <Border
                Grid.RowSpan="9"
                MaxHeight="400"
                Padding="5,5,6,66"
                d:Visibility="Collapsed"
                Background="{DynamicResource ApplicationBackgroundBrush}"
                CornerRadius="10"
                DataContext="{Binding DateTimePickerVM, Mode=OneWay}"
                Visibility="{Binding IsOpen, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                <d:Border.DataContext>
                    <vm:DateTimePickerViewModel />
                </d:Border.DataContext>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <c:TimePicker
                        Grid.Row="0"
                        Grid.ColumnSpan="2"
                        SelectedTime="{Binding SelectedTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Visibility="{Binding IsTimePickerEnabled, Mode=OneWay, Converter={StaticResource BoolToVisibility}}" />
                    <Calendar
                        Grid.Row="1"
                        Grid.ColumnSpan="2"
                        Margin="7,5"
                        SelectedDate="{Binding SelectedDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Style="{StaticResource CompactCalendarStyle}" />
                    <ui:Button
                        Grid.Row="2"
                        Grid.Column="0"
                        Margin="0,0,3,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Appearance="Primary"
                        Command="{Binding PickCommand}"
                        Content="{x:Static r:Resources.SelectLabel}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon Symbol="Checkmark20" />
                        </ui:Button.Icon>
                    </ui:Button>
                    <ui:Button
                        Grid.Row="2"
                        Grid.Column="1"
                        Margin="3,0,0,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Command="{Binding CloseCommand}"
                        Content="{x:Static r:Resources.CancelLabel}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon Symbol="Dismiss20" />
                        </ui:Button.Icon>
                    </ui:Button>
                </Grid>
            </Border>
        </Grid>
    </ScrollViewer>
</Page>
