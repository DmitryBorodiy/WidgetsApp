<ui:FluentWindow
    x:Class="BetterWidgets.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviours="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:custom="clr-namespace:BetterWidgets.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:r="clr-namespace:BetterWidgets.Resources"
    xmlns:sv="clr-namespace:BetterWidgets.Views.Settings"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    Name="WindowRoot"
    Title="{x:Static r:Resources.AppName}"
    Width="880"
    Height="600"
    MinWidth="720"
    MinHeight="666"
    d:Background="{ui:ThemeResource ApplicationBackgroundBrush}"
    d:Foreground="{ui:ThemeResource TextFillColorPrimaryBrush}"
    d:WindowStyle="None"
    ui:ExtendsContentIntoTitleBar="True"
    Closing="OnClosing"
    ResizeMode="CanMinimize"
    WindowBackdropType="Mica"
    WindowCornerPreference="Round"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <ui:FluentWindow.Resources>
        <Storyboard x:Key="SearchBoxFocused">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="AccountCommandUI" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                <EasingDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchPaneCommandUI" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SearchContextUI" Storyboard.TargetProperty="(FrameworkElement.MaxWidth)">
                <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="500">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="SearchContextUI" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00.3000000" Value="-40,0,-40,0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseInOut" />
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="SearchBoxUnfocused">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SearchContextUI" Storyboard.TargetProperty="(FrameworkElement.MaxWidth)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="240" />
                <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="190">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchPaneCommandUI" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="AccountCommandUI" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="SearchContextUI" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="-40,0,-40,0" />
                <EasingThicknessKeyFrame KeyTime="00:00:00.3000000" Value="0,0,0,0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseInOut" />
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="ShowPaneAnimation">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneSidebarUI" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="-100" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneSidebarUI" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneSidebarUI" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.2000000" Value="{x:Static Visibility.Visible}" />
                <DiscreteObjectKeyFrame KeyTime="00:00:00.3000000" Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HidePaneAnimation">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneSidebarUI" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneSidebarUI" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="-80" />
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneSidebarUI" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </ui:FluentWindow.Resources>

    <Grid x:Name="RootLayout">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="{Binding PaneColumnWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    MinWidth="{Binding PaneColumnMinWidth, Mode=OneWay}"
                    MaxWidth="{Binding PaneColumnMaxWidth, Mode=OneWay}"
                    d:MaxWidth="360"
                    d:MinWidth="260"
                    d:Width="300" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <ui:TitleBar
                Grid.Row="0"
                Grid.Column="1"
                Height="32"
                Margin="{Binding TitleBarMargin, Mode=OneWay}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                ButtonsForeground="{ui:ThemeResource TextFillColorPrimaryBrush}"
                CanMaximize="False"
                CloseClicked="OnCloseClicked"
                ShowMaximize="False" />
            <Grid
                x:Name="PaneSidebarUI"
                Grid.RowSpan="2"
                Grid.Column="0"
                RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform />
                    </TransformGroup>
                </Grid.RenderTransform>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid
                    Name="SidebarHeader"
                    Grid.Row="0"
                    Margin="10,12,12,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="33" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Border
                        x:Name="SearchContextUI"
                        Grid.Column="1"
                        MaxWidth="190"
                        Margin="0,0,0,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        ClipToBounds="True"
                        CornerRadius="10">
                        <ui:TextBox
                            x:Name="SearchBoxUI"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            ClipToBounds="True"
                            PlaceholderText="{x:Static r:Resources.SearchWidgets}"
                            RenderTransformOrigin="0.5,0.5"
                            Style="{StaticResource DefaultSearchBox}"
                            Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <behaviours:Interaction.Triggers>
                                <behaviours:EventTrigger EventName="GotFocus">
                                    <behaviours:ControlStoryboardAction Storyboard="{StaticResource SearchBoxFocused}" />
                                </behaviours:EventTrigger>
                                <behaviours:EventTrigger EventName="LostFocus">
                                    <behaviours:ControlStoryboardAction Storyboard="{StaticResource SearchBoxUnfocused}" />
                                </behaviours:EventTrigger>
                            </behaviours:Interaction.Triggers>
                            <ui:TextBox.RenderTransform>
                                <ScaleTransform ScaleX="0.90" ScaleY="0.90" />
                            </ui:TextBox.RenderTransform>
                        </ui:TextBox>
                    </Border>
                    <ui:Button
                        x:Name="AccountCommandUI"
                        Grid.Column="2"
                        VerticalAlignment="Center"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        Command="{Binding AccountFlyoutCommand}"
                        CommandParameter="{Binding ElementName=AccountCommandUI}">
                        <ui:Button.Style>
                            <Style BasedOn="{StaticResource FlatButton}" TargetType="ui:Button">
                                <Setter Property="CornerRadius" Value="20" />
                            </Style>
                        </ui:Button.Style>
                        <ui:Button.ContextMenu>
                            <ContextMenu Placement="MousePoint">
                                <ui:MenuItem
                                    Command="{Binding SignInCommand}"
                                    DataContext="{StaticResource MainVM}"
                                    Header="{x:Static r:Resources.SignInLabel}">
                                    <ui:MenuItem.Icon>
                                        <ui:SymbolIcon Symbol="Person20" />
                                    </ui:MenuItem.Icon>
                                </ui:MenuItem>
                            </ContextMenu>
                        </ui:Button.ContextMenu>

                        <Grid>
                            <custom:PersonPicture
                                Width="29"
                                Height="29"
                                PersonImageSource="{Binding AccountAvatar, Mode=OneWay}"
                                Visibility="{Binding IsAccountInformationLoading, Mode=OneWay, Converter={StaticResource BoolToVisibilityInvert}}" />

                            <ui:ProgressRing
                                Width="20"
                                Height="20"
                                IsIndeterminate="True"
                                Visibility="{Binding IsAccountInformationLoading, Mode=OneWay, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged}" />
                        </Grid>
                    </ui:Button>
                    <Popup
                        x:Name="AccountFlyoutUI"
                        HorizontalAlignment="Center"
                        HorizontalOffset="-106"
                        IsOpen="{Binding IsAccountFlyoutOpen, Mode=TwoWay}"
                        Placement="Bottom"
                        PlacementTarget="{Binding ElementName=AccountCommandUI}"
                        Style="{StaticResource DefaultPopupStyle}"
                        VerticalOffset="10">
                        <Border Background="{DynamicResource FlyoutBackground}" CornerRadius="5">
                            <Grid Margin="13,13,13,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <custom:PersonPicture
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Width="40"
                                    Height="40"
                                    PersonImageSource="{Binding AccountAvatar, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />

                                <StackPanel
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    Margin="13,0,0,0">
                                    <ui:TextBlock
                                        HorizontalAlignment="Stretch"
                                        FontSize="16"
                                        Text="{Binding Account.DisplayName, Mode=OneWay}"
                                        TextTrimming="CharacterEllipsis" />
                                    <ui:TextBlock
                                        Margin="0,2,0,0"
                                        HorizontalAlignment="Stretch"
                                        Opacity="0.8"
                                        Text="{Binding Account.Email, Mode=OneWay}"
                                        TextTrimming="CharacterEllipsis" />
                                </StackPanel>

                                <StackPanel
                                    Grid.Row="1"
                                    Grid.ColumnSpan="2"
                                    Margin="-7,10,-7,0"
                                    HorizontalAlignment="Stretch">
                                    <ui:Button
                                        Padding="8"
                                        HorizontalAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        Command="{Binding SignOutCommand}"
                                        Style="{StaticResource FlatButton}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <ui:SymbolIcon
                                                Grid.Column="0"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                FontSize="20"
                                                Symbol="SignOut20" />
                                            <ui:TextBlock
                                                Grid.Column="1"
                                                Margin="8,0,0,0"
                                                VerticalAlignment="Center"
                                                Text="{x:Static r:Resources.SignOutLabel}"
                                                TextTrimming="CharacterEllipsis" />
                                        </Grid>
                                    </ui:Button>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Popup>
                </Grid>
                <Grid
                    x:Name="UIWidgetsCollection"
                    Grid.Row="1"
                    Margin="22,15"
                    Visibility="{Binding IsWidgetsCollectionVisible, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBlock
                        Grid.Row="0"
                        HorizontalAlignment="Stretch"
                        d:Text="Widgets"
                        FontWeight="SemiBold"
                        Text="{x:Static r:Resources.WidgetsLabel}"
                        TextTrimming="CharacterEllipsis" />
                    <ui:ListView
                        x:Name="WidgetsCollectionUI"
                        Grid.Row="1"
                        Margin="-16,13,-17,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        ItemTemplate="{StaticResource WidgetItemTemplate}"
                        ItemsSource="{Binding Widgets, Mode=OneWay}"
                        SelectedItem="{Binding SelectedWidgetItem, Mode=TwoWay}">
                        <ui:ListView.ContextMenu>
                            <ContextMenu>
                                <ui:MenuItem
                                    Command="{Binding RefreshTrayWidgetsListCommand}"
                                    Header="{x:Static r:Resources.ShowInTray}"
                                    IsCheckable="True"
                                    IsChecked="{Binding SelectedWidgetItem.IsShowInTray, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <ui:MenuItem.Icon>
                                        <ui:SymbolIcon Symbol="Eye20" />
                                    </ui:MenuItem.Icon>
                                </ui:MenuItem>
                            </ContextMenu>
                        </ui:ListView.ContextMenu>
                    </ui:ListView>
                </Grid>
                <Grid
                    x:Name="UISearchCollection"
                    Grid.Row="1"
                    Margin="6,15"
                    Visibility="{Binding IsSearch, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                    <ui:ListView
                        ItemTemplate="{StaticResource SearchItemTemplate}"
                        ItemsSource="{Binding SearchItemsSource, Mode=OneWay}"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                        SelectedItem="{Binding SelectedSearchView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>
                <StackPanel Grid.Row="2" Margin="10,11">
                    <ui:Button
                        Grid.Column="0"
                        Padding="8"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Stretch"
                        Command="{Binding RateReviewCommand}"
                        Style="{StaticResource FlatButton}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ui:SymbolIcon
                                Grid.Column="0"
                                FontSize="18"
                                Symbol="PersonFeedback20" />
                            <TextBlock
                                Grid.Column="1"
                                Margin="12,0,12,2"
                                VerticalAlignment="Center"
                                d:Text="Leave feedback"
                                Text="{x:Static r:Resources.LeaveFeedback}"
                                TextTrimming="CharacterEllipsis" />
                        </Grid>
                    </ui:Button>
                    <ui:Button
                        Grid.Column="0"
                        Margin="0,6,0,0"
                        Padding="8"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Stretch"
                        Command="{Binding NavigateCommand}"
                        CommandParameter="{x:Type sv:SettingsView}"
                        Style="{StaticResource FlatButton}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ui:SymbolIcon
                                Grid.Column="0"
                                FontSize="18"
                                Symbol="Settings20" />
                            <TextBlock
                                Grid.Column="1"
                                Margin="12,0,12,2"
                                VerticalAlignment="Center"
                                d:Text="Settings"
                                Text="{x:Static r:Resources.SettingsLabel}"
                                TextTrimming="CharacterEllipsis" />
                        </Grid>
                    </ui:Button>
                </StackPanel>
            </Grid>
            <Grid Grid.RowSpan="2" Grid.Column="1">
                <Rectangle
                    Grid.RowSpan="2"
                    Grid.Column="1"
                    Fill="{DynamicResource ButtonBackground}"
                    Opacity="0.5" />
                <ContentControl Margin="{Binding IsPaneOpened, Mode=OneWay, Converter={StaticResource RootContentFrameThickness}}" Content="{Binding Frame, Mode=OneWay}" />
            </Grid>
            <GridSplitter
                Grid.RowSpan="2"
                Grid.Column="0"
                Width="13"
                VerticalAlignment="Stretch"
                Cursor="SizeWE"
                Visibility="{Binding IsPaneOpened, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                <GridSplitter.Template>
                    <ControlTemplate>
                        <Grid
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="Transparent">
                            <Border
                                Width="4.2"
                                Height="27"
                                Margin="0,0,1,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Background="{ui:ThemeResource TextFillColorSecondaryBrush}"
                                CornerRadius="2"
                                Opacity="0.3" />
                        </Grid>
                    </ControlTemplate>
                </GridSplitter.Template>
            </GridSplitter>
            <ui:InfoBar
                Name="UIMessageBar"
                Title="{Binding MessageBarTitle, Mode=OneWay}"
                Grid.Row="1"
                Grid.Column="1"
                MaxWidth="500"
                Margin="30"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                IsClosable="True"
                IsOpen="{Binding IsMessageBarOpen, Mode=TwoWay}"
                Message="{Binding MessageBarSubtitle, Mode=OneWay}"
                Severity="{Binding MessageBarSeverity, Mode=OneWay}">
                <ui:Button
                    Command="{Binding MessageBarCommand}"
                    Content="{Binding MessageBarActionText, Mode=OneWay}"
                    Visibility="{Binding IsMessageBarCommandEnabled, Mode=OneWay, Converter={StaticResource BoolToVisibility}}" />
            </ui:InfoBar>
        </Grid>
        <ui:Button
            x:Name="SwitchPaneCommandUI"
            Margin="11,12,0,0"
            Padding="9,7"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Panel.ZIndex="200"
            Command="{Binding TogglePaneCommand}"
            CommandParameter="{Binding ElementName=WindowRoot, Path=Resources}"
            Style="{StaticResource FlatButton}">
            <ui:SymbolIcon FontSize="18" Symbol="Navigation20" />
        </ui:Button>
    </Grid>
</ui:FluentWindow>
